/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AnyOfCreateChatCompletionRequestModel;
import java.math.BigDecimal;
import io.swagger.client.model.CreateChatCompletionRequest;
import io.swagger.client.model.CreateChatCompletionResponse;
import io.swagger.client.model.CreateCompletionRequest;
import io.swagger.client.model.CreateCompletionResponse;
import io.swagger.client.model.CreateEditRequest;
import io.swagger.client.model.CreateEditResponse;
import io.swagger.client.model.CreateEmbeddingRequest;
import io.swagger.client.model.CreateEmbeddingResponse;
import io.swagger.client.model.CreateFineTuneRequest;
import io.swagger.client.model.CreateImageRequest;
import io.swagger.client.model.CreateModerationRequest;
import io.swagger.client.model.CreateModerationResponse;
import io.swagger.client.model.CreateTranscriptionResponse;
import io.swagger.client.model.CreateTranslationResponse;
import io.swagger.client.model.DeleteFileResponse;
import io.swagger.client.model.DeleteModelResponse;
import java.io.File;
import io.swagger.client.model.FineTune;
import io.swagger.client.model.ImagesResponse;
import io.swagger.client.model.ListFilesResponse;
import io.swagger.client.model.ListFineTuneEventsResponse;
import io.swagger.client.model.ListFineTunesResponse;
import io.swagger.client.model.ListModelsResponse;
import io.swagger.client.model.Model;
import io.swagger.client.model.OpenAIFile;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for OpenAiApi
 */
@Ignore
public class OpenAiApiTest {

    private final OpenAiApi api = new OpenAiApi();

    /**
     * Immediately cancel a fine-tune job. 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cancelFineTuneTest() throws Exception {
        String fineTuneId = null;
        FineTune response = api.cancelFineTune(fineTuneId);

        // TODO: test validations
    }
    /**
     * Creates a model response for the given chat conversation.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createChatCompletionTest() throws Exception {
        CreateChatCompletionRequest body =  new CreateChatCompletionRequest();
        body.setModel("gpt-3.5-turbo");

        CreateChatCompletionResponse response = api.createChatCompletion(body);

        // TODO: test validations
    }
    /**
     * Creates a completion for the provided prompt and parameters.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCompletionTest() throws Exception {
        CreateCompletionRequest body = null;
        CreateCompletionResponse response = api.createCompletion(body);

        // TODO: test validations
    }
    /**
     * Creates a new edit for the provided input, instruction, and parameters.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createEditTest() throws Exception {
        CreateEditRequest body = null;
        CreateEditResponse response = api.createEdit(body);

        // TODO: test validations
    }
    /**
     * Creates an embedding vector representing the input text.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createEmbeddingTest() throws Exception {
        CreateEmbeddingRequest body = null;
        CreateEmbeddingResponse response = api.createEmbedding(body);

        // TODO: test validations
    }
    /**
     * Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit. 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createFileTest() throws Exception {
        File file = null;
        String purpose = null;
        OpenAIFile response = api.createFile(file, purpose);

        // TODO: test validations
    }
    /**
     * Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createFineTuneTest() throws Exception {
        CreateFineTuneRequest body = null;
        FineTune response = api.createFineTune(body);

        // TODO: test validations
    }
    /**
     * Creates an image given a prompt.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageTest() throws Exception {
        CreateImageRequest body = null;
        ImagesResponse response = api.createImage(body);

        // TODO: test validations
    }
    /**
     * Creates an edited or extended image given an original image and a prompt.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageEditTest() throws Exception {
        File image = null;
        File mask = null;
        String prompt = null;
        Integer n = null;
        String size = null;
        String responseFormat = null;
        String user = null;
        ImagesResponse response = api.createImageEdit(image, mask, prompt, n, size, responseFormat, user);

        // TODO: test validations
    }
    /**
     * Creates a variation of a given image.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createImageVariationTest() throws Exception {
        File image = null;
        Integer n = null;
        String size = null;
        String responseFormat = null;
        String user = null;
        ImagesResponse response = api.createImageVariation(image, n, size, responseFormat, user);

        // TODO: test validations
    }
    /**
     * Classifies if text violates OpenAI&#x27;s Content Policy
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createModerationTest() throws Exception {
        CreateModerationRequest body = null;
        CreateModerationResponse response = api.createModeration(body);

        // TODO: test validations
    }
    /**
     * Transcribes audio into the input language.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTranscriptionTest() throws Exception {
        File file = null;
        Object model = null;
        String prompt = null;
        String responseFormat = null;
        BigDecimal temperature = null;
        String language = null;
        CreateTranscriptionResponse response = api.createTranscription(file, model, prompt, responseFormat, temperature, language);

        // TODO: test validations
    }
    /**
     * Translates audio into English.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTranslationTest() throws Exception {
        File file = null;
        Object model = null;
        String prompt = null;
        String responseFormat = null;
        BigDecimal temperature = null;
        CreateTranslationResponse response = api.createTranslation(file, model, prompt, responseFormat, temperature);

        // TODO: test validations
    }
    /**
     * Delete a file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteFileTest() throws Exception {
        String fileId = null;
        DeleteFileResponse response = api.deleteFile(fileId);

        // TODO: test validations
    }
    /**
     * Delete a fine-tuned model. You must have the Owner role in your organization.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteModelTest() throws Exception {
        String model = null;
        DeleteModelResponse response = api.deleteModel(model);

        // TODO: test validations
    }
    /**
     * Returns the contents of the specified file
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void downloadFileTest() throws Exception {
        String fileId = null;
        String response = api.downloadFile(fileId);

        // TODO: test validations
    }
    /**
     * Returns a list of files that belong to the user&#x27;s organization.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listFilesTest() throws Exception {
        ListFilesResponse response = api.listFiles();

        // TODO: test validations
    }
    /**
     * Get fine-grained status updates for a fine-tune job. 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listFineTuneEventsTest() throws Exception {
        String fineTuneId = null;
        Boolean stream = null;
        ListFineTuneEventsResponse response = api.listFineTuneEvents(fineTuneId, stream);

        // TODO: test validations
    }
    /**
     * List your organization&#x27;s fine-tuning jobs 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listFineTunesTest() throws Exception {
        ListFineTunesResponse response = api.listFineTunes();

        // TODO: test validations
    }
    /**
     * Lists the currently available models, and provides basic information about each one such as the owner and availability.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listModelsTest() throws Exception {
        ListModelsResponse response = api.listModels();

        // TODO: test validations
    }
    /**
     * Returns information about a specific file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveFileTest() throws Exception {
        String fileId = null;
        OpenAIFile response = api.retrieveFile(fileId);

        // TODO: test validations
    }
    /**
     * Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning) 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveFineTuneTest() throws Exception {
        String fineTuneId = null;
        FineTune response = api.retrieveFineTune(fineTuneId);

        // TODO: test validations
    }
    /**
     * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveModelTest() throws Exception {
        String model = null;
        Model response = api.retrieveModel(model);

        // TODO: test validations
    }
}
